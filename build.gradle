// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.4.10'

    ext {

        fileFilter = [
                '**/R.*', // android
                '**/R$*.*',
                'android/**/*.*',
                '**/BuildConfig.*',
                '**/Manifest*.*',
                '**/*$InjectAdapter.*', // butterknife
                '**/*$ModuleAdapter.*',
                '**/*$ViewInjector*.*',
                '**/*MembersInjector*.*',
                '**/*$ViewBinder*.*',
                '**/*ViewBinding*.*',
                '**/rxscheduler/**/*.*', // rx
                '**/Lambda$*.*', // retrolambda
                '**/Lambda.*',
                '**/*Lambda.*',
                '**/*Lambda*.*',
                '**/*_MembersInjector.*', //Dagger2 generated code
                '*/*_MembersInjector*.*',
                '**/*_*Factory*.*',
                '*/*Component*.*',
                '**/*Module*.*',
                '**/component/**/*.*', // components dagger interfaces
                '**/data/qualifier/**/*.*', // dagger qualifier annotations
                '**/data/service/*.*', // retrofit interfaces,
                '**/*Test*.*',
                '**/*Activity.*',
                '**/*Fragment.*',
                '**/*View.*',
                '**/*Application.*',
                '**/lib/zxing/**/*.*'
        ]

        ci = System.getenv("CI") == "true"

        constraintLayout_version = '2.0.2'
        lifecycle_version = '2.2.0'
        room_version = '2.2.5'

        dagger_version = '2.28.3'

        rx_version = '2.2.8'

        retrofit_version = '2.9.0'
        okhttp_version = '4.9.0'
        moshi_version = '1.9.2'

        leakcanary_version = '1.6.3'

        ktlint_version = '0.33.0'

        coroutines_version = "1.3.9"

        mockito_version = '3.3.0'
        junit_version = '4.13'
        hamcrest_version = '1.3'
        espresso_version = '3.3.0-alpha04'
    }


    repositories {
        google()
        jcenter()
    }
    dependencies {

        classpath 'com.android.tools.build:gradle:4.1.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0"

        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:1.0.3'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}


plugins {
    id "com.diffplug.gradle.spotless" version "3.27.1"
    id 'com.github.ben-manes.versions' version "0.27.0"
    id 'jacoco'
}


allprojects {
    repositories {
        google()
        jcenter()
    }

}

String propOrDef(String propertyName, String defaultValue) {
    def propertyValue = project.properties[propertyName]
    return propertyValue != null ? propertyValue : defaultValue
}